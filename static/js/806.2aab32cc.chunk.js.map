{"version":3,"file":"static/js/806.2aab32cc.chunk.js","mappings":"uRAEaA,EAAOC,EAAAA,GAAAA,GAAH,+HAQJC,EAAYD,EAAAA,GAAAA,GAAH,0IAQTE,EAAeF,EAAAA,GAAAA,EAAH,kH,SC8BzB,EA1CgB,WACd,IAAQG,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGwBE,EAAAA,EAAAA,IAAWR,GAHnC,OAGUS,EAHV,OAIIC,QAAQC,IAAIF,GACZL,EAAWK,GALf,yEAQIH,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAadM,EACD,GAAE,CAACZ,IAECG,EAGL,OACE,gCACGE,IAAa,SAACQ,EAAA,EAAD,IACbV,EAAQW,OAAS,IAChB,SAAClB,EAAD,UACGO,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACX,2BACE,SAACnB,EAAD,UAAYkB,KACZ,SAACjB,EAAD,UAAekB,MAFRD,EADE,MAQG,IAAnBb,EAAQW,SAAgB,8DAG9B,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  padding: 0;\n  grid-template-columns: 1fr 1fr;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const TitleText = styled.h2`\n  margin-bottom: 20px;\n  font-weight: 600;\n  font-size: 22px;\n  line-height: 1.38;\n  letter-spacing: 0.02em;\n`;\n\nexport const ParagrafText = styled.p`\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.38;\n  letter-spacing: 0.02em;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../helpers/api';\nimport { Loadder } from '../../helpers/Loadder';\nimport { List, TitleText, ParagrafText } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const casts = await getReviews(id);\n        console.log(casts);\n        setReviews(casts);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovies();\n  }, [id]);\n\n  if (!reviews) {\n    return;\n  }\n  return (\n    <>\n      {isLoading && <Loadder />}\n      {reviews.length > 0 && (\n        <List>\n          {reviews.map(({ author, content }) => (\n            <li key={author}>\n              <TitleText>{author}</TitleText>\n              <ParagrafText>{content}</ParagrafText>\n            </li>\n          ))}\n        </List>\n      )}\n      {reviews.length === 0 && <p>There is no information here yet</p>}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["List","styled","TitleText","ParagrafText","id","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","getReviews","casts","console","log","getMovies","Loadder","length","map","author","content"],"sourceRoot":""}