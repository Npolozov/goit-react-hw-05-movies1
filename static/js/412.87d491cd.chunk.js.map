{"version":3,"file":"static/js/412.87d491cd.chunk.js","mappings":"wRAEaA,EAAeC,EAAAA,GAAAA,QAAH,mDAIZC,EAAaD,EAAAA,GAAAA,KAAH,gLAWVE,EAAmBF,EAAAA,GAAAA,OAAH,yYAuBhBG,EAAQH,EAAAA,GAAAA,MAAH,8P,mBC9BLI,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACvC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAaA,OACE,UAACV,EAAD,YACE,UAACE,EAAD,CAAYI,SAVK,SAAAK,GACnBA,EAAEC,iBACmB,KAAjBH,EAAMI,QACRC,EAAAA,GAAAA,MAAY,qBAEdR,EAASG,GACTC,EAAS,GACV,EAGG,WACE,SAACN,EAAD,CACEW,aAAcR,EACdS,KAAK,OACLC,YAAY,eACZC,SAnBiB,SAAAC,GACvBT,EAASS,EAAMC,cAAcb,MAAMc,cACpC,KAmBK,SAAClB,EAAD,CAAkBa,KAAK,SAAvB,UACE,SAAC,MAAD,CAAUM,MAAM,eAGpB,SAAC,KAAD,CAAgBC,UAAW,IAAMC,SAAS,gBAG/C,E,6BC/BKC,EAAgB,8FA+DtB,EA7De,WAAO,IAAD,EACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACjD,GAA4BtB,EAAAA,EAAAA,UAAS,IAArC,eAAOuB,EAAP,KAAeC,EAAf,KACA,GAA0BxB,EAAAA,EAAAA,UAAS,MAAnC,eAAOyB,EAAP,KAAcC,EAAd,KACA,GAAkC1B,EAAAA,EAAAA,WAAS,GAA3C,eAAO2B,EAAP,KAAkBC,EAAlB,KA6CA,OA3BAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,oGAEID,GAAa,GAFjB,UAGyBE,EAAAA,EAAAA,IAAiBT,GAH1C,UAK0B,KAFhBE,EAHV,QAKeQ,OALf,uBAMMzB,EAAAA,GAAAA,MACE,2EAPR,0BAWIkB,EAAUD,GAXd,kDAaIS,QAAQC,IAAR,MACAP,EAAST,GACTO,EAAU,IAfd,yBAiBII,GAAa,GAjBjB,8EAJc,sBACM,KAAhBP,GADU,mCAwBda,EACD,GAAE,CAACb,KAGF,iCACE,SAACxB,EAAD,CAAcC,SAjCD,SAAAC,GACfqB,EAA0B,KAAVrB,EAAe,CAAEE,MAAOF,GAAU,CAAC,EACpD,EA+BqCA,MAAOsB,IACxCM,IAAa,SAACQ,EAAA,EAAD,IACbV,IAAS,uBAAIA,IACbJ,IAAgBM,IAAa,SAACS,EAAA,EAAD,CAAUb,OAAQA,KAChD,SAAC,KAAD,CAAgBR,UAAW,IAAMC,SAAS,gBAG/C,C","sources":["pages/searchMoviesList/SearchMovies.styled.js","pages/searchMoviesList/SearchMovies.js","pages/movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const InputSection = styled.section`\n  padding: 10px 0 20px 0;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: 1px;\n  outline: none;\n  padding-left: 10px;\n  padding-right: 10px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import {\n  SearchForm,\n  SearchFormButton,\n  Input,\n  InputSection,\n} from './SearchMovies.styled';\nimport { FiSearch } from 'react-icons/fi';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useState } from 'react';\n\nexport const SearchMovies = ({ onSubmit, value }) => {\n  const [query, setQuery] = useState('');\n  const handelFormChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Enter movie title');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <InputSection>\n      <SearchForm onSubmit={handelSubmit}>\n        <Input\n          defaultValue={value}\n          type=\"text\"\n          placeholder=\"Search films\"\n          onChange={handelFormChange}\n        />\n        <SearchFormButton type=\"submit\">\n          <FiSearch width=\"50px\" />\n        </SearchFormButton>\n      </SearchForm>\n      <ToastContainer autoClose={2000} position=\"top-right\" />\n    </InputSection>\n  );\n};\n","\nimport { useState, useEffect } from 'react';\nimport { getMoviesbyQuery } from 'helpers/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { SearchMovies } from '../searchMoviesList/SearchMovies';\nimport { FilmList } from 'components/filmList/FilmList';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loadder } from 'helpers/Loadder';\n\nconst ERROR_MESSAGE = 'Произошла ошыбка';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const updateQueryString = name => {\n  //   const nextParams = name !== '' ? { name } : {};\n  //   setSearchParams(nextParams);\n  // };\n\n  // const handlelFormSubmit = query => {\n  //   setQuery(query);\n  //   setError(null);\n  //   setMovies([]);\n  //   updateQueryString();\n  // };\n\n  const onSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    async function getFilm() {\n      try {\n        setIsLoading(true);\n        const movies = await getMoviesbyQuery(searchQuery);\n\n        if (movies.length === 0) {\n          toast.error(\n            'Sorry, there are no films matching your search query. Please try again.'\n          );\n          return;\n        }\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n        setError(ERROR_MESSAGE);\n        setMovies([]);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getFilm();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchMovies onSubmit={onSubmit} value={searchQuery} />\n      {isLoading && <Loadder />}\n      {error && <p>{error}</p>}\n      {searchQuery && !isLoading && <FilmList movies={movies} />}\n      <ToastContainer autoClose={2000} position=\"top-right\" />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["InputSection","styled","SearchForm","SearchFormButton","Input","SearchMovies","onSubmit","value","useState","query","setQuery","e","preventDefault","trim","toast","defaultValue","type","placeholder","onChange","event","currentTarget","toLowerCase","width","autoClose","position","ERROR_MESSAGE","useSearchParams","searchParams","setSearchParams","searchQuery","get","movies","setMovies","error","setError","isLoading","setIsLoading","useEffect","getMoviesbyQuery","length","console","log","getFilm","Loadder","FilmList"],"sourceRoot":""}