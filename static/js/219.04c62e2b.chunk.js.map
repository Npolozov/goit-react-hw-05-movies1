{"version":3,"file":"static/js/219.04c62e2b.chunk.js","mappings":"gRAEaA,EAAOC,EAAAA,GAAAA,GAAH,+NAQJC,EAAwBD,EAAAA,GAAAA,IAAH,8DAKrBE,EAAYF,EAAAA,GAAAA,EAAH,mDAITG,EAAOH,EAAAA,GAAAA,GAAH,uI,kBCmCjB,EAhDa,WACX,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAyBE,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEID,GAAa,GAFjB,UAGwBE,EAAAA,EAAAA,IAAQR,GAHhC,OAGUG,EAHV,OAIIM,QAAQC,IAAIP,GACZC,EAAQD,GALZ,yEAQIG,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAadK,EACD,GAAE,CAACX,IAECG,EAIL,OACE,gCACGE,IAAa,SAACO,EAAA,EAAD,IACbT,EAAMU,OAAS,IACd,SAACd,EAAD,UACGI,EAAMW,KACL,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,aAAT,OACEA,IACE,UAACrB,EAAD,YACE,SAACE,EAAD,CACEoB,IAAG,0CAAqCD,GACxCE,IAAKH,KAEP,SAACjB,EAAD,UAAYiB,MALHA,EAFf,QAeX,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  background: white;\n  border-radius: 4px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ImageGalleryItemimage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const ActorName = styled.p`\n  margin: 10px 0 5px 5px;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  padding: 0;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 20px;\n  list-style: none;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from '../../helpers/api';\nimport { Item, ImageGalleryItemimage, ActorName, List } from './Cast.styled';\nimport { Loadder } from '../../helpers/Loadder';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [casts, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n        const casts = await getCast(id);\n        console.log(casts);\n        setCast(casts);\n      } catch (error) {\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovies();\n  }, [id]);\n\n  if (!casts) {\n    return;\n  }\n\n  return (\n    <>\n      {isLoading && <Loadder />}\n      {casts.length > 0 && (\n        <List>\n          {casts.map(\n            ({ name, profile_path }) =>\n              profile_path && (\n                <Item key={name}>\n                  <ImageGalleryItemimage\n                    src={`https://image.tmdb.org/t/p/w500/${profile_path}`}\n                    alt={name}\n                  />\n                  <ActorName>{name}</ActorName>\n                </Item>\n              )\n          )}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["Item","styled","ImageGalleryItemimage","ActorName","List","id","useParams","useState","casts","setCast","isLoading","setIsLoading","useEffect","getCast","console","log","getMovies","Loadder","length","map","name","profile_path","src","alt"],"sourceRoot":""}