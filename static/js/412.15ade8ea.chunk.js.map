{"version":3,"file":"static/js/412.15ade8ea.chunk.js","mappings":"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","sources":["components/filmList/FilmList.styled.js","components/filmList/FilmList.js","pages/searchMoviesList/SearchMovies.styled.js","pages/searchMoviesList/SearchMovies.js","pages/movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\n\nexport const ListSection = styled.section`\npadding-bottom: 50px;\n`\n\nexport const Item = styled.li`\n  background: white;\n  border-radius: 4px;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06),\n      1px 4px 6px rgba(0, 0, 0, 0.16);\n  }\n`;\n\nexport const ImageGalleryItemimage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const FilmName = styled.p`\n  margin: 10px 0 5px 5px;\n`;\n\nexport const Link = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  padding: 0;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 20px;\n  list-style: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  List,\n  FilmName,\n  Link,\n  Item,\n  ImageGalleryItemimage,\n  ListSection,\n} from './FilmList.styled';\n\nexport const FilmList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ListSection>\n      <List>\n        {movies.map(({ poster_path, id, name, title }) => (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <ImageGalleryItemimage\n                src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                alt={name}\n              />\n              <FilmName>{title ? title : name}</FilmName>\n              {/* {(name = true > 0 && <FilmName>{name}</FilmName>)}\n              {(title = true > 0 && <FilmName>{title}</FilmName>)} */}\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </ListSection>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputSection = styled.section`\n  padding: 10px 0 20px 0;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0px;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: 1px;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import {\n  SearchForm,\n  SearchFormButton,\n  Input,\n  InputSection,\n} from './SearchMovies.styled';\nimport { FiSearch } from 'react-icons/fi';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useState } from 'react';\n\nexport const SearchMovies = ({ onSubmit, value }) => {\n  const [query, setQuery] = useState('');\n  const handelFormChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      toast.error('Enter movie title');\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <InputSection>\n      <SearchForm onSubmit={handelSubmit}>\n        <Input\n          defaultValue={value}\n          type=\"text\"\n          placeholder=\"Search films\"\n          onChange={handelFormChange}\n        />\n        <SearchFormButton type=\"submit\">\n          <FiSearch width=\"50px\" />\n        </SearchFormButton>\n      </SearchForm>\n      <ToastContainer autoClose={2000} position=\"top-right\" />\n    </InputSection>\n  );\n};\n","// import { Conteiner } from './SearchMoviesstyled';\nimport { useState, useEffect } from 'react';\nimport { getMoviesbyQuery } from 'helpers/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { SearchMovies } from '../searchMoviesList/SearchMovies';\nimport { FilmList } from 'components/filmList/FilmList';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loadder } from 'helpers/Loadder';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // const updateQueryString = name => {\n  //   const nextParams = name !== '' ? { name } : {};\n  //   setSearchParams(nextParams);\n  // };\n\n  // const handlelFormSubmit = query => {\n  //   setQuery(query);\n  //   setError(null);\n  //   setMovies([]);\n  //   updateQueryString();\n  // };\n\n  const onSubmit = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n    async function getFilm() {\n      try {\n        setIsLoading(true);\n        const movies = await getMoviesbyQuery(searchQuery);\n\n        if (movies.length === 0) {\n          toast.error(\n            'Sorry, there are no films matching your search query. Please try again.'\n          );\n          return;\n        }\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n        setMovies([]);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getFilm();\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchMovies onSubmit={onSubmit} value={searchQuery} />\n      {isLoading && <Loadder />}\n      {error && <p>{error}</p>}\n      {searchQuery && <FilmList movies={movies} />}\n      <ToastContainer autoClose={2000} position=\"top-right\" />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["ListSection","styled","Item","ImageGalleryItemimage","FilmName","Link","NavLink","List","FilmList","movies","location","useLocation","map","poster_path","id","name","title","to","state","from","src","alt","InputSection","SearchForm","SearchFormButton","Input","SearchMovies","onSubmit","value","useState","query","setQuery","e","preventDefault","trim","toast","defaultValue","type","placeholder","onChange","event","currentTarget","toLowerCase","width","autoClose","position","useSearchParams","searchParams","setSearchParams","searchQuery","get","setMovies","error","setError","isLoading","setIsLoading","useEffect","getMoviesbyQuery","length","console","log","message","getFilm","Loadder"],"sourceRoot":""}